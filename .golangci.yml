# Version 0.0.17 (26.03.2025)

version: "2"
run:
  allow-parallel-runners: true
output:
  sort-order:
    - linter
    - severity
    - file
linters:
  default: none
  enable:
    - asasalint
    - bodyclose
    - copyloopvar
    - depguard
    - dogsled
    - dupl
    - durationcheck
    - errcheck
    - errname
    - errorlint
    - exptostd
    - forbidigo
    - funlen
    - gocheckcompilerdirectives
    - gochecknoinits
    - gochecksumtype
    - goconst
    - gocritic
    - godot
    - godox
    - gomoddirectives
    - goprintffuncname
    - gosec
    - govet
    - iface
    - ineffassign
    - loggercheck
    - misspell
    - mnd
    - nakedret
    - nilerr
    - nilnesserr
    - nilnil
    - noctx
    - nolintlint
    - perfsprint
    - predeclared
    - promlinter
    - protogetter
    - reassign
    - recvcheck
    - revive
    - staticcheck
    - tagliatelle
    - testableexamples
    - testifylint
    - thelper
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - usetesting
    - wastedassign
    - whitespace
  settings:
    depguard:
      rules:
        main:
          deny:
            - pkg: github.com/golang/protobuf
              desc: packet deprecated.
        test:
          files:
            - $test
          deny:
            - pkg: reflect
              desc: Please don't use reflect package in tests
    dogsled:
      max-blank-identifiers: 2
    dupl:
      threshold: 150
    errcheck:
      check-type-assertions: true
      check-blank: true
      exclude-functions:
        - io/ioutil.ReadFile
        - io.Copy(*bytes.Buffer)
        - io.Copy(os.Stdout)
    errorlint:
      errorf: false
      asserts: false
    funlen:
      lines: 60
      statements: 40
      ignore-comments: true
    goconst:
      min-len: 2
      min-occurrences: 3
      numbers: true
    gocritic:
      disabled-checks:
        - dupImport
        - ifElseChain
        - octalLiteral
      enabled-tags:
        - diagnostic
        - experimental
        - opinionated
        - performance
        - style
      settings:
        commentedOutCode:
          minLength: 50
        elseif:
          skipBalanced: false
        hugeParam:
          sizeThreshold: 512
        nestingReduce:
          bodyWidth: 5
        rangeValCopy:
          sizeThreshold: 512
    godot:
      scope: toplevel
      exclude:
        - '^fixme:'
        - '^todo:'
        - '^TODO:'
      capital: true
      period: true
    godox:
      keywords:
        - FIXME
    gosec:
      excludes:
        - G108
        - G112
    govet:
      disable:
        - structtag
        - fieldalignment
      enable-all: true
    iface:
      enable:
        - identical
        - unused
        - opaque
    loggercheck:
      kitlog: false
      klog: false
      logr: false
      slog: false
      zap: true
      require-string-key: true
      no-printf-like: true
    misspell:
      locale: US
      ignore-rules:
        - importas
    mnd:
      checks:
        - argument
        - case
        - condition
        - operation
        - return
        - assign
      ignored-numbers:
        - "0666"
      ignored-functions:
        - strings.SplitN
    nakedret:
      max-func-lines: 30
    nilnil:
      detect-opposite: true
    nlreturn:
      block-size: 2
    nolintlint:
      require-explanation: true
      require-specific: true
      allow-unused: false
    protogetter:
      skip-files:
        - '*.pb.go'
      skip-any-generated: true
      replace-first-arg-in-append: true
    revive:
      confidence: 0.8
      enable-all-rules: true
      rules:
        - name: unexported-return
          disabled: true
        - name: line-length-limit
          arguments:
            - 120
        - name: add-constant
          arguments:
            - fmt\\.Println: null
              ignoreFuncs = "os\\.*: null
              make": null
              maxLitCount = "2": null
          disabled: true
        - name: max-public-structs
          disabled: true
        - name: function-length
          arguments:
            - 30
            - 50
          disabled: true
        - name: cognitive-complexity
          arguments:
            - 20
        - name: cyclomatic
          arguments:
            - 15
        - name: flag-parameter
          disabled: true
        - name: filename-format
          arguments:
            - ^[_a-z][_a-z0-9]*.go$
    staticcheck:
      checks:
        - all
    tagliatelle:
      case:
        rules:
          avro: snake
          bson: camel
          json: snake
          mapstructure: kebab
          xml: camel
          yaml: snake
  exclusions:
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    rules:
      - linters:
          - dupl
          - errcheck
          - funlen
          - gocyclo
          - gosec
          - revive
        path: (.+)_test\.go
      - linters:
          - funlen
        path: app.go
      - linters:
          - govet
        text: 'shadow: declaration of "(err|ctx)" shadows declaration at'
      - linters:
          - goconst
        path: (.+)_test\.go
    paths:
      - third_party$
      - builtin$
      - examples$
issues:
  # Maximum issues count per one linter.
  # Set to 0 to disable.
  # Default: 50
  max-issues-per-linter: 0
  # Maximum count of issues with the same text.
  # Set to 0 to disable.
  # Default: 3
  max-same-issues: 0
  # Make issues output unique by line.
  uniq-by-line: true
  # Show only new issues created after git revision `REV`.
  new-from-rev: main
  # Show issues in any part of update files (requires new-from-rev or new-from-patch).
  whole-files: false
  # Show only new issues: if there are unstaged changes or untracked files,
  # only those changes are analyzed, else only changes in HEAD~ are analyzed.
  # It's a super-useful option for integration of golangci-lint into existing large codebase.
  # It's not practical to fix all existing issues at the moment of integration:
  # much better don't allow issues in new code.
  new: false
formatters:
  enable:
    - gci
    - gofmt
    - gofumpt
  settings:
    gci:
      sections:
        - standard
        - localmodule
        - prefix(github.com/Haba1234/)
        - default
      custom-order: true
    gofmt:
      rewrite-rules:
        - pattern: interface{}
          replacement: any
        - pattern: a[b:len(a)]
          replacement: a[b:]
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
